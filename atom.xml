<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>保持独立 适当拥有</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-26T08:05:33.094Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Enoch_oahz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode_724_寻找数组的中心索引</title>
    <link href="http://yoursite.com/2020/06/26/LeetCode-724-%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E7%B4%A2%E5%BC%95/"/>
    <id>http://yoursite.com/2020/06/26/LeetCode-724-寻找数组的中心索引/</id>
    <published>2020-06-26T08:03:38.000Z</published>
    <updated>2020-06-26T08:05:33.094Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><p>给定一个整数类型的数组<code>nums</code>，请编写一个能够返回数组 “<strong>中心索引</strong>” 的方法。</p><p>我们是这样定义数组 <strong>中心索引</strong> 的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。</p><p>如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">nums = [1, 7, 3, 6, 5, 6]</span><br><span class="line">输出：3</span><br><span class="line">解释：</span><br><span class="line">索引 3 (nums[3] = 6) 的左侧数之和 (1 + 7 + 3 = 11)，与右侧数之和 (5 + 6 = 11) 相等。</span><br><span class="line">同时, 3 也是第一个符合要求的中心索引。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">nums = [1, 2, 3]</span><br><span class="line">输出：-1</span><br><span class="line">解释：</span><br><span class="line">数组中不存在满足此条件的中心索引。</span><br></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>这里我们需要求的左边和以及右边的和进行比较,在进行遍历的时候对左边和进行求解是比较方便的.直接初始化<code>leftSum</code>=0,然后每次遍历之后可以+=进行累加求的<code>leftSum</code>.</p><p>最主要的还是通过<code>leftSum</code>求的<code>rightSum</code>(<code>rightSum</code> = <code>sum</code>(数组的和) - <code>num.at(i)</code> - <code>leftSum</code>) 每次循环先进行求的<code>rightSum</code> 然后与<code>leftSum</code>进行比较,如果相等则<code>return</code> 当前的次序<code>i</code>.直到数组遍历结束未找到左右和相等则返回<code>-1</code>.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pivotIndex</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> rightSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();i++)&#123;</span><br><span class="line">            sum += nums.at(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();i++)&#123;</span><br><span class="line">            rightSum = sum-nums.at(i)-leftSum;</span><br><span class="line">            <span class="keyword">if</span>(rightSum == leftSum) <span class="keyword">return</span> i;</span><br><span class="line">            leftSum += nums.at(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode_1470_重新排列数组</title>
    <link href="http://yoursite.com/2020/06/25/LeetCode_1470_%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2020/06/25/LeetCode_1470_重新排列数组/</id>
    <published>2020-06-25T03:28:14.000Z</published>
    <updated>2020-06-26T08:03:51.184Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给你一个数组 <code>nums</code> ，数组中有 <code>2n</code> 个元素，按 <code>[x1,x2,...,xn,y1,y2,...,yn]</code> 的格式排列。</p><p>请你将数组按 <code>[x1,y1,x2,y2,...,xn,yn]</code> 格式重新排列，返回重排后的数组。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>示例 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,1,3,4,7], n = 3</span><br><span class="line">输出：[2,3,5,4,1,7] </span><br><span class="line">解释：由于 x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 ，所以答案为 [2,3,5,4,1,7]</span><br></pre></td></tr></table></figure><p>示例 2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3,4,4,3,2,1], n = 4</span><br><span class="line">输出：[1,4,2,3,3,2,4,1]</span><br></pre></td></tr></table></figure><p>示例 3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2,2], n = 2</span><br><span class="line">输出：[1,2,1,2]</span><br></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>这里新建一个<code>vector</code> <code>res</code>,然后通过一次循环i-&gt;<code>[0,n)</code><br>将<code>num[i]</code>以及<code>num[i+n]</code>插入到新建的res中 (这里<code>num[i]</code>与<code>num[i+n]</code>分别代表题干表示的x1,y1)<br>这样<code>res</code>中就保存了<code>x1,y1,x2,y2</code>等等..<br>然后<code>return</code> 就完事儿了</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; shuffle(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> n) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            res.push_back(nums[i]);</span><br><span class="line">            res.push_back(nums[i+n]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode_1486_数组异或运算</title>
    <link href="http://yoursite.com/2020/06/24/LeetCode_1486_%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2020/06/24/LeetCode_1486_数组异或运算/</id>
    <published>2020-06-24T02:36:39.000Z</published>
    <updated>2020-06-26T08:03:52.938Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><p>给你两个整数，<code>n</code> 和 <code>start</code> 。</p><p>数组 <code>nums</code> 定义为：<code>nums[i]</code> = <code>start</code> + <code>2*i</code>（下标从 0 开始）且 <code>n</code> == <code>nums.length</code> 。</p><p>请返回 <code>nums</code> 中所有元素按位异或（XOR）后得到的结果。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 5, start = 0</span><br><span class="line">输出：8</span><br><span class="line">解释：数组 nums 为 [0, 2, 4, 6, 8]，其中 (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8 。</span><br><span class="line">     &quot;^&quot; 为按位异或 XOR 运算符。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, start = 3</span><br><span class="line">输出：8</span><br><span class="line">解释：数组 nums 为 [3, 5, 7, 9]，其中 (3 ^ 5 ^ 7 ^ 9) = 8.</span><br></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>首先得明白按位异或(XOR)是什么:</p><p>参与运算的两个值，==如果两个相应位相同，则结果为0==，否则为1。即：0^0=0， 1^0=1， 0^1=1， 1^1=0 例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5: 00000101</span><br><span class="line">3: 00000100</span><br><span class="line">5^3 = 00000001 -&gt; 1</span><br></pre></td></tr></table></figure><p>我们这里只需要在一个for循环里面进行对每个数累计求异或运算 <strong>^=</strong>即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>代码很简单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int xorOperation(int n, int start) &#123;</span><br><span class="line">        int result = 0;</span><br><span class="line">        for(int i=0; i&lt;n; i++)&#123;</span><br><span class="line">            result ^= start + 2*i;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这道题是很简单的一道题.做这个题解的目的呢主要是记录一下</p><p>希望自己能慢慢在leetcode上刷题来提升自己去解决更复杂的问题.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>HBase集群配置搭建</title>
    <link href="http://yoursite.com/2020/05/08/HBase%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/05/08/HBase集群配置搭建/</id>
    <published>2020-05-08T13:53:16.000Z</published>
    <updated>2020-05-08T13:55:44.615Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-集群分配"><a href="#1-集群分配" class="headerlink" title="1.集群分配"></a>1.集群分配</h1><p>这里搭建一个 3 节点的 HBase 集群，其中三台主机上均为 <code>Regin Server</code>。同时为了保证高可用，除了在 master 上部署主 <code>Master</code> 服务外，还在 slave1 上部署备用的 <code>Master</code> 服务。<code>Master</code> 服务由 Zookeeper 集群进行协调管理，如果主 <code>Master</code> 不可用，则备用 <code>Master</code> 会成为新的主 <code>Master</code>。</p><h1 id="2-前置条件"><a href="#2-前置条件" class="headerlink" title="2.前置条件"></a>2.前置条件</h1><p>HBase 的运行需要依赖 Hadoop 和 JDK(HBase 2.0+ 对应 JDK 1.8+) 。同时为了保证高可用，这里我们不采用 HBase 内置的 Zookeeper 服务，而采用外置的 Zookeeper 集群。相关搭建步骤可以参阅</p><h1 id="3-集群搭建"><a href="#3-集群搭建" class="headerlink" title="3.集群搭建"></a>3.集群搭建</h1><h2 id="3-1-下载并解压"><a href="#3-1-下载并解压" class="headerlink" title="3.1 下载并解压"></a>3.1 下载并解压</h2><p>讲下载好的HBase可以通过WinScp上传到服务器上.然后进行解压:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tar -zxvf hbase-1.2.0-cdh5.15.2.tar.gz</span><br></pre></td></tr></table></figure><h2 id="3-2-配置环境变量"><a href="#3-2-配置环境变量" class="headerlink" title="3.2 配置环境变量"></a>3.2 配置环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HBASE_HOME=usr/app/hbase-1.2.0-cdh5.15.2</span><br><span class="line">export PATH=$HBASE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>使得配置生效:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HBASE_HOME=usr/app/hbase-1.2.0-cdh5.15.2</span><br><span class="line">export PATH=$HBASE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="3-3-集群配置"><a href="#3-3-集群配置" class="headerlink" title="3.3 集群配置"></a>3.3 集群配置</h2><p>进入<code>${HBASE_HOME}/conf</code>目录下,修改配置:</p><ol><li><p>hbase-env.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 配置JDK安装位置</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_231</span><br><span class="line"># 不使用内置的zookeeper服务</span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br></pre></td></tr></table></figure></li><li><p>hbase-site.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!-- 指定 hbase 以分布式集群的方式运行 --&gt;</span><br><span class="line">        &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!-- 指定 hbase 在 HDFS 上的存储位置 --&gt;</span><br><span class="line">        &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://hadoop001:8020/hbase&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!-- 指定 zookeeper 的地址--&gt;</span><br><span class="line">        &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop001:2181,hadoop002:2181,hadoop003:2181&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>regionservers</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure></li><li><p>backup-masters</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br></pre></td></tr></table></figure></li></ol><p><strong>注:<code>backup-masters</code> 这个文件是不存在的，需要新建，主要用来指明备用的 master 节点，可以是多个，这里我们以 1 个为例。</strong></p><h2 id="3-4-安装包分发"><a href="#3-4-安装包分发" class="headerlink" title="3.4 安装包分发"></a>3.4 安装包分发</h2><p>将 HBase 的安装包分发到其他服务器，分发后建议在这两台服务器上也配置一下 HBase 的环境变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/local/hbase-2.0.0/  slave1:usr/local/</span><br><span class="line">scp -r /usr/local/hbase-2.0.0/  slave2:usr/local/</span><br></pre></td></tr></table></figure><h1 id="4-启动集群"><a href="#4-启动集群" class="headerlink" title="4 启动集群"></a>4 启动集群</h1><h2 id="4-1-启动ZooKeeper集群"><a href="#4-1-启动ZooKeeper集群" class="headerlink" title="4.1 启动ZooKeeper集群"></a>4.1 启动ZooKeeper集群</h2><p>分别到三台服务器上启动 ZooKeeper 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><h2 id="4-2-启动Hadoop集群"><a href="#4-2-启动Hadoop集群" class="headerlink" title="4.2 启动Hadoop集群"></a>4.2 启动Hadoop集群</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动dfs服务</span><br><span class="line">start-dfs.sh</span><br><span class="line"># 启动yarn服务</span><br><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure><h2 id="4-3-启动HBase集群"><a href="#4-3-启动HBase集群" class="headerlink" title="4.3 启动HBase集群"></a>4.3 启动HBase集群</h2><p>进入 master 的 <code>${HBASE_HOME}/bin</code>，使用以下命令启动 HBase 集群。执行此命令后，会在 master 上启动 Master 服务，在 slave1 上启动备用 <code>Master</code> 服务，在 <code>regionservers</code> 文件中配置的所有节点启动 <code>region server</code> 服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure><h2 id="4-4-查看服务"><a href="#4-4-查看服务" class="headerlink" title="4.4 查看服务"></a>4.4 查看服务</h2><p>访问 HBase 的 Web-UI 界面，这里我安装的 HBase 版本为 2.0.0，访问端口为 16010，如果你安装的是 2.0 以下的版本，则访问端口号为 60010。可以看到 <code>Master</code> 在 master 上，三个 Regin Servers 分别在 master，slave1，和 slave2 上，并且还有一个 <code>Backup Matser</code> 服务在 slave1 上。</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>至此,已经在三台虚拟机上将<code>Hadoop2.8.5</code>,<code>Zookeeper3.4.14</code>以及<code>Hbase2.0.0</code>搭建全部结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="HBase" scheme="http://yoursite.com/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper集群配置搭建</title>
    <link href="http://yoursite.com/2020/05/08/Zookeeper%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/05/08/Zookeeper集群配置搭建/</id>
    <published>2020-05-08T13:53:05.000Z</published>
    <updated>2020-05-08T13:55:34.754Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-Zookeeper集群环境搭建"><a href="#1-Zookeeper集群环境搭建" class="headerlink" title="1.Zookeeper集群环境搭建"></a>1.Zookeeper集群环境搭建</h1><h2 id="1-1下载"><a href="#1-1下载" class="headerlink" title="1.1下载"></a>1.1下载</h2><p>下载对应版本 Zookeeper，这里我下载的版本 3.4.14。官方下载地址：<a href="https://archive.apache.org/dist/zookeeper/" target="_blank" rel="noopener">https://archive.apache.org/dist/zookeeper/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz</span><br></pre></td></tr></table></figure><h2 id="1-2解压"><a href="#1-2解压" class="headerlink" title="1.2解压"></a>1.2解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tar -zxvf zookeeper-3.4.14.tar.gz</span><br></pre></td></tr></table></figure><h2 id="1-3配置环境解压"><a href="#1-3配置环境解压" class="headerlink" title="1.3配置环境解压"></a>1.3配置环境解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ZOOKEEPER_HOME=/usr/app/zookeeper-3.4.14</span><br><span class="line">export PATH=$ZOOKEEPER_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>使得配置生效:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="1-4修改配置"><a href="#1-4修改配置" class="headerlink" title="1.4修改配置"></a>1.4修改配置</h2><p>进入安装目录的 conf/ 目录下，拷贝配置样本并进行修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cp zoo_sample.cfg  zoo.cfg</span><br></pre></td></tr></table></figure><p>指定数据存储目录和日志文件目录（目录不用预先创建，程序会自动创建），修改后完整配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/usr/local/zookeeper-cluster/data/</span><br><span class="line">dataLogDir=/usr/local/zookeeper-cluster/log/</span><br><span class="line">clientPort=2181</span><br><span class="line"></span><br><span class="line"># server.1 这个1是服务器的标识，可以是任意有效数字，标识这是第几个服务器节点，这个标识要写到dataDir目录下面myid文件里</span><br><span class="line"># 指名集群间通讯端口和选举端口</span><br><span class="line">server.1=master:2287:3387</span><br><span class="line">server.2=slave1:2287:3387</span><br><span class="line">server.3=slave2:2287:3387</span><br></pre></td></tr></table></figure><p>配置说明:</p><ul><li>tickTime：用于计算的基础时间单元。比如 session 超时：N*tickTime；</li><li>initLimit：用于集群，允许从节点连接并同步到 master 节点的初始化连接时间，以 tickTime 的倍数来表示；</li><li>syncLimit：用于集群， master 主节点与从节点之间发送消息，请求和应答时间长度（心跳机制）；</li><li>dataDir：数据存储位置；</li><li>dataLogDir：日志目录；</li><li>clientPort：用于客户端连接的端口，默认 2181</li></ul><h2 id="1-5-标识节点"><a href="#1-5-标识节点" class="headerlink" title="1.5 标识节点"></a>1.5 标识节点</h2><p>分别在三台主机的 dataDir 目录下新建 myid 文件,并写入对应的节点标识。Zookeeper 集群通过 myid 文件识别集群节点，并通过上文配置的节点通信端口和选举端口来进行节点通信，选举出 Leader 节点。<br>创建存储目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 三台主机均执行该命令</span><br><span class="line">mkdir -vp  /usr/local/zookeeper-cluster/data/</span><br></pre></td></tr></table></figure><p>创建并写入节点标识到 myid 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># master主机</span><br><span class="line">echo &quot;1&quot; &gt; /usr/local/zookeeper-cluster/data/myid</span><br><span class="line"># slave1主机</span><br><span class="line">echo &quot;2&quot; &gt; /usr/local/zookeeper-cluster/data/myid</span><br><span class="line"># slave2主机</span><br><span class="line">echo &quot;3&quot; &gt; /usr/local/zookeeper-cluster/data/myid</span><br></pre></td></tr></table></figure><h2 id="1-5-启动"><a href="#1-5-启动" class="headerlink" title="1.5 启动"></a>1.5 启动</h2><p>分别在三台主机运行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><h2 id="1-6-验证"><a href="#1-6-验证" class="headerlink" title="1.6 验证"></a>1.6 验证</h2><p>启动后使用 zkServer.sh status 查看集群各个节点状态。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Zookeeper" scheme="http://yoursite.com/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>hadoop集群搭建</title>
    <link href="http://yoursite.com/2020/05/08/hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/05/08/hadoop集群搭建/</id>
    <published>2020-05-08T13:17:50.000Z</published>
    <updated>2020-05-08T13:43:57.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-基本环境"><a href="#1-基本环境" class="headerlink" title="1. 基本环境"></a>1. 基本环境</h1><h2 id="1-1-三台虚拟机"><a href="#1-1-三台虚拟机" class="headerlink" title="1.1 三台虚拟机"></a>1.1 三台虚拟机</h2><p>169.254.110.100 master</p><p>169.254.110.101 slave1</p><p>169.254.110.102 slave2</p><h2 id="1-2-软件包"><a href="#1-2-软件包" class="headerlink" title="1.2 软件包"></a>1.2 软件包</h2><p>jdk-8u231-linux-i586.tar.gz</p><p>hadoop-2.8.5.tar.gz</p><h1 id="2-环境配置"><a href="#2-环境配置" class="headerlink" title="2. 环境配置"></a>2. 环境配置</h1><h2 id="2-1-新建hadoop用户"><a href="#2-1-新建hadoop用户" class="headerlink" title="2.1 新建hadoop用户"></a>2.1 新建hadoop用户</h2><p><code>useradd hadoop</code></p><p>通过passwd命令修改hadoop用户密码，启用hadoop用户。<br><code>passwd hadoop</code></p><h2 id="2-2-配置ssh免密码登录"><a href="#2-2-配置ssh免密码登录" class="headerlink" title="2.2 配置ssh免密码登录"></a>2.2 配置ssh免密码登录</h2><p>2.2.1 集群环境</p><table><thead><tr><th>节点名称</th><th>节点ip</th></tr></thead><tbody><tr><td>master</td><td>169.254.110.100</td></tr><tr><td>slave1</td><td>169.254.110.101</td></tr><tr><td>slave2</td><td>169.254.110.102</td></tr></tbody></table><p>2.2.2 免登录原理<br>每台主机<code>authorized_keys</code>文件里面包含的主机（ssh密钥），该主机都能无密码登录，所以只要每台主机的<code>authorized_keys</code>文件里面都放入其他主机（需要无密码登录的主机）的ssh密钥就行了。</p><p>2.2.3 实现<br>每个节点生成ssh密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# ssh-keygen -t rsa(一直点确定)</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Created directory &apos;/root/.ssh&apos;.</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">.....................</span><br><span class="line"></span><br><span class="line">[root@master .ssh]# ls</span><br><span class="line">id_rsa  id_rsa.pub</span><br></pre></td></tr></table></figure><p>在主节点(master)将公钥(id_rsa.pub)拷到一个特定文件<code>authorized_keys</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master .ssh]# cp id_rsa.pub authorized_keys</span><br><span class="line">[root@master .ssh]# ls</span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub</span><br></pre></td></tr></table></figure><p>然后将该文件拷到下一个节点中去,并将该节点的ssh密钥<em>追加</em>到该文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#在master上使用scp命令实现远程文件拷贝</span><br><span class="line">[root@master .ssh]# scp authorized_keys  root@hadoop02:/root/.ssh/</span><br><span class="line">The authenticity of host &apos;hadoop02 (192.168.44.11)&apos; can&apos;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:MyB1zs0E3J/fm8pC0AN8ycsgEIBNHtUqd9xS0WAyv3s.</span><br><span class="line">ECDSA key fingerprint is MD5:88:48:3a:ba:3e:14:a7:d7:86:f6:51:74:00:10:f9:00.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;hadoop02,192.168.44.11&apos; (ECDSA) to the list of known hosts.</span><br><span class="line">root@hadoop02&apos;s password: </span><br><span class="line">authorized_keys                                                                100%  395   306.2KB/s   00:00    </span><br><span class="line"></span><br><span class="line">#登录slave1主机</span><br><span class="line">[root@slave1 ~]# cd .ssh/</span><br><span class="line">[root@slave1 .ssh]# ls</span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub</span><br><span class="line">[root@slave1 .ssh]# cat id_rsa.pub &gt;&gt; authorized_keys #使用cat追加方式</span><br></pre></td></tr></table></figure><p>重复上步操作,将slave1的<code>authorized_keys</code>文件传到slave2中并将slave2中的密钥追加到该文件中.最后将slave2的<code>authorized_keys</code>文件传到master与slave1中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#登录slave2主机，将ssh密钥加入authorized_keys文件中</span><br><span class="line">[root@slave2 .ssh]# cat id_rsa.pub &gt;&gt; authorized_keys </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#将最后生成的authorized_keys文件分别拷贝到master,slave1</span><br><span class="line">[root@slave2 .ssh]# scp authorized_keys root@master:/root/.ssh/</span><br><span class="line">[root@slave2 .ssh]# scp authorized_keys root@slave1:/root/.ssh/</span><br></pre></td></tr></table></figure><p>最后免密登录</p><h2 id="2-3-修改hosts文件"><a href="#2-3-修改hosts文件" class="headerlink" title="2.3 修改hosts文件"></a>2.3 修改hosts文件</h2><p>修改master主机hosts文件<br><code>vi /etc/hosts</code> 并添加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">169.254.110.100 master</span><br><span class="line">169.254.110.101 slave1</span><br><span class="line">169.254.110.102 slave2</span><br></pre></td></tr></table></figure><p>并且同步到其他主机上去</p><h2 id="2-4-JDK安装"><a href="#2-4-JDK安装" class="headerlink" title="2.4 JDK安装"></a>2.4 JDK安装</h2><p>这里不多阐述 用<code>WinSCP</code>传到虚拟机中然后解压并且配置环境变量</p><h2 id="2-5-Hadoop环境配置"><a href="#2-5-Hadoop环境配置" class="headerlink" title="2.5 Hadoop环境配置"></a>2.5 Hadoop环境配置</h2><h3 id="2-5-1-上传并且解压hadoop2-8-5"><a href="#2-5-1-上传并且解压hadoop2-8-5" class="headerlink" title="2.5.1 上传并且解压hadoop2.8.5"></a>2.5.1 上传并且解压hadoop2.8.5</h3><ul><li><p>hadoop-env.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 指定JDK的安装位置</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_201/</span><br></pre></td></tr></table></figure></li><li><p>core-site.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!--指定 namenode 的 hdfs 协议文件系统的通信地址--&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://master:8020&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!--指定 hadoop 集群存储临时文件的目录--&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>hdfs-site.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;!--namenode 节点数据（即元数据）的存放位置，可以指定多个目录实现容错，多个目录用逗号分隔--&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/namenode/data&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;!--datanode 节点数据（即数据块）的存放位置--&gt;</span><br><span class="line">    &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/datanode/data&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></li><li><p>yarn-site.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!--配置 NodeManager 上运行的附属服务。需要配置成 mapreduce_shuffle 后才可以在 Yarn 上运行 MapReduce 程序。--&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;!--resourcemanager 的主机名--&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop001&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>slaves</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-5-2-分发程序"><a href="#2-5-2-分发程序" class="headerlink" title="2.5.2 分发程序"></a>2.5.2 分发程序</h3><p>将 Hadoop 安装包分发到其他两台服务器，分发后建议在这两台服务器上也配置一下 Hadoop 的环境变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将安装包分发到hadoop002</span><br><span class="line">scp -r /usr/home/hadoop-2.8.5-cdh5.15.2/  root@slave1:/usr/home/</span><br><span class="line"># 将安装包分发到hadoop003</span><br><span class="line">scp -r /usr/home/hadoop-2.8.5-cdh5.15.2/  root@slave2:/usr/home/</span><br></pre></td></tr></table></figure><h2 id="2-6-初始化"><a href="#2-6-初始化" class="headerlink" title="2.6 初始化"></a>2.6 初始化</h2><p>在 <code>master</code> 上执行 namenode 初始化命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><h2 id="2-7-启动集群"><a href="#2-7-启动集群" class="headerlink" title="2.7 启动集群"></a>2.7 启动集群</h2><p>在<code>master</code>主机中进入${HADOOP_HOME}/sbin 目录下，启动 Hadoop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动dfs服务</span><br><span class="line">start-dfs.sh</span><br><span class="line"># 启动yarn服务</span><br><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure><h2 id="3-7-查看集群"><a href="#3-7-查看集群" class="headerlink" title="3.7 查看集群"></a>3.7 查看集群</h2><p>在每台服务器上使用 jps 命令查看服务进程，或直接进入 Web-UI 界面进行查看，端口为 50070。</p><h1 id="4-提交服务到集群"><a href="#4-提交服务到集群" class="headerlink" title="4 提交服务到集群"></a>4 提交服务到集群</h1><p>提交作业到集群的方式和单机环境完全一致，这里以提交 Hadoop 内置的计算 Pi 的示例程序为例，在任何一个节点上执行都可以，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar /usr/app/hadoop-2.6.0-cdh5.15.2/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0-cdh5.15.2.jar  pi  3  3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Hadoop" scheme="http://yoursite.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Springboot整合Thymeleaf</title>
    <link href="http://yoursite.com/2019/09/03/Springboot%E6%95%B4%E5%90%88Thymeleaf/"/>
    <id>http://yoursite.com/2019/09/03/Springboot整合Thymeleaf/</id>
    <published>2019-09-03T07:58:31.000Z</published>
    <updated>2019-09-03T08:03:28.857Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="thymeleaf的介绍"><a href="#thymeleaf的介绍" class="headerlink" title="thymeleaf的介绍"></a>thymeleaf的介绍</h2><p>Thymeleaf 介绍<br>Thymeleaf 是一款用于渲染 XML/XHTML/HTML5 内容的模板引擎。类似 JSP，Velocity，FreeMaker 等，它也可以轻易的与 Spring MVC 等 Web 框架进行集成作为 Web 应用的模板引擎。与其它模板引擎相比，Thymeleaf 最大的特点是能够直接在浏览器中打开并正确显示模板页面，而不需要启动整个 Web 应用。</p><p>好了，你们说了我们已经习惯使用了什么 Velocity,FreMaker，beetle之类的模版，那么到底好在哪里呢？</p><p>比一比吧</p><p>Thymeleaf 是与众不同的，因为它使用了自然的模板技术。这意味着 Thymeleaf 的模板语法并不会破坏文档的结构，模板依旧是有效的XML文档。模板还可以用作工作原型，Thymeleaf 会在运行期替换掉静态值。Velocity 与 FreeMarke r则是连续的文本处理器。 下面的代码示例分别使用 Velocity、FreeMarker 与 Thymeleaf 打印出一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Velocity: &lt;p&gt;$message&lt;/p&gt;</span><br><span class="line">FreeMarker: &lt;p&gt;$&#123;message&#125;&lt;/p&gt;</span><br><span class="line">Thymeleaf: &lt;p th:text=&quot;$&#123;message&#125;&quot;&gt;Hello World!&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>注意，由于 Thymeleaf 使用了 <code>XML DOM</code> 解析器，因此它并不适合于处理大规模的 XML 文件。</p><h2 id="添加Jar包"><a href="#添加Jar包" class="headerlink" title="添加Jar包"></a>添加Jar包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- thymelaef模板 --&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#Thymeleaf配置</span><br><span class="line"></span><br><span class="line">#开发时关闭缓存,不然没法看到实时页面</span><br><span class="line">spring.thymeleaf.cache=false</span><br><span class="line">spring.thymeleaf.check-template=true</span><br><span class="line"># 模板模式设置，默认为HTML5</span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line">spring.thymeleaf.check-template-location=true</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line">spring.thymeleaf.servlet.content-type=text/html</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br></pre></td></tr></table></figure><h2 id="模板中引入thymeleaf"><a href="#模板中引入thymeleaf" class="headerlink" title="模板中引入thymeleaf"></a>模板中引入thymeleaf</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="thymeleaf部分语法"><a href="#thymeleaf部分语法" class="headerlink" title="thymeleaf部分语法"></a>thymeleaf部分语法</h2><p>URL<br>URL 在 Web 应用模板中占据着十分重要的地位，需要特别注意的是 Thymeleaf 对于 URL 的处理是通过语法 @{…} 来处理的。Thymeleaf 支持绝对路径 URL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:href=&quot;@&#123;http://www.thymeleaf.org&#125;&quot;&gt;Thymeleaf&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>条件求值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:href=&quot;@&#123;/login&#125;&quot; th:unless=$&#123;session.user != null&#125;&gt;Login&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>for循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr th:each=&quot;prod : $&#123;prods&#125;&quot;&gt;</span><br><span class="line">      &lt;td th:text=&quot;$&#123;prod.name&#125;&quot;&gt;Onions&lt;/td&gt;</span><br><span class="line">      &lt;td th:text=&quot;$&#123;prod.price&#125;&quot;&gt;2.41&lt;/td&gt;</span><br><span class="line">      &lt;td th:text=&quot;$&#123;prod.inStock&#125;? #&#123;true&#125; : #&#123;false&#125;&quot;&gt;yes&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><h2 id="thymeleaf中文文档"><a href="#thymeleaf中文文档" class="headerlink" title="thymeleaf中文文档"></a>thymeleaf中文文档</h2><p><a href="https://blog.csdn.net/zhangcc233/article/details/80831056" target="_blank" rel="noopener">Thymeleaf中文文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/study/java/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="Thymeleaf" scheme="http://yoursite.com/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>Springboot整合Jpa</title>
    <link href="http://yoursite.com/2019/09/01/Springboot%E6%95%B4%E5%90%88Jpa/"/>
    <id>http://yoursite.com/2019/09/01/Springboot整合Jpa/</id>
    <published>2019-09-01T07:58:42.000Z</published>
    <updated>2019-09-01T08:14:59.564Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="添加jar包"><a href="#添加jar包" class="headerlink" title="添加jar包"></a>添加jar包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/test</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=123456</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">spring.jpa.properties.hibernate.hbm2ddl.auto=update</span><br><span class="line">spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect</span><br><span class="line">spring.jpa.show-sql= true</span><br></pre></td></tr></table></figure><p><strong>spring.jpa.properties.hibernate.hbm2ddl.auto</strong>这个参数的作用在于:自动创建,更新,验证数据库表的结构<br>有以下是四个值:</p><p>1 create： 每次加载 hibernate 时都会删除上一次的生成的表，然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。</p><p>2 create-drop ：每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭,表就自动删除。</p><p>3 update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 hibernate 时根据 model 类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。</p><p>4 validate ：每次加载 hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。</p><p><strong>dialect</strong>主要是指定生成表名的存储引擎为InnoDBD</p><p><strong>show-sql</strong>是否打印出自动生成的SQL,方便调试的时候查看</p><h2 id="添加实体类"><a href="#添加实体类" class="headerlink" title="添加实体类"></a>添加实体类</h2><p>与数据表进行映射,并且配置好映射关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@Entity</span><br><span class="line">@Data</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@NoArgsConstructor</span><br><span class="line">public class User implements Serializable &#123;</span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line">    @Id //设置主键</span><br><span class="line">    @GeneratedValue //id自增</span><br><span class="line">    private Long id;</span><br><span class="line"></span><br><span class="line">    @Column(nullable = false,unique = true) //用户名不为空且唯一</span><br><span class="line">    private String userName;</span><br><span class="line"></span><br><span class="line">    @Column(nullable = false)</span><br><span class="line">    private String passWord;</span><br><span class="line"></span><br><span class="line">    @Column(nullable = false)</span><br><span class="line">    private String email;</span><br><span class="line"></span><br><span class="line">    @Column(nullable = false)</span><br><span class="line">    private String nickName;</span><br><span class="line"></span><br><span class="line">    @Column(nullable = false)</span><br><span class="line">    private String regTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置DAO层"><a href="#设置DAO层" class="headerlink" title="设置DAO层"></a>设置DAO层</h2><p>dao 只要继承 JpaRepository 类就可以，几乎可以不用写方法，还有一个特别有尿性的功能非常赞，就是可以根据方法名来自动的生成 SQL，比如<strong>findByUserName</strong> 会自动生成一个以 <strong>userName</strong> 为参数的查询方法，比如 findAlll 自动会查询表里面的所有数据，比如自动分页等等。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Repository</span><br><span class="line">public interface UserRepository extends JpaRepository&lt;User,Long&gt; &#123;</span><br><span class="line"></span><br><span class="line">    User findByUserName(String userName);</span><br><span class="line"></span><br><span class="line">    User findByUserNameAndPassWord(String userName,String password);</span><br><span class="line"></span><br><span class="line">    User findByUserNameOrEmail(String userName,String Email);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加Service层"><a href="#添加Service层" class="headerlink" title="添加Service层"></a>添加Service层</h2><p>UserService.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">public interface UserService &#123;</span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * 功能描述: 添加用户</span><br><span class="line">     *</span><br><span class="line">     * @param: user</span><br><span class="line">     * @return: User</span><br><span class="line">     * @auther: zy</span><br><span class="line">     * @date: 2019/9/1 15:05</span><br><span class="line">     */</span><br><span class="line">    User saveUser(User user);</span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * 功能描述: 删除用户</span><br><span class="line">     *</span><br><span class="line">     * @param: id</span><br><span class="line">     * @return: void</span><br><span class="line">     * @auther: zy</span><br><span class="line">     * @date: 2019/9/1 15:06</span><br><span class="line">     */</span><br><span class="line">    void removeUser(Long id);</span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * 功能描述: 更新用户信息</span><br><span class="line">     *</span><br><span class="line">     * @param: user</span><br><span class="line">     * @return: User</span><br><span class="line">     * @auther: zy</span><br><span class="line">     * @date: 2019/9/1 15:06</span><br><span class="line">     */</span><br><span class="line">    User updateUser(User user);</span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * 功能描述: 通过id得到用户</span><br><span class="line">     *</span><br><span class="line">     * @param: id</span><br><span class="line">     * @return: User</span><br><span class="line">     * @auther: zy</span><br><span class="line">     * @date: 2019/9/1 15:06</span><br><span class="line">     */</span><br><span class="line">    User getUserByNameAndPassword(String userName,String passWord);</span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * 功能描述: 得到所有用户信息</span><br><span class="line">     *</span><br><span class="line">     * @param: null</span><br><span class="line">     * @return: List&lt;User&gt;</span><br><span class="line">     * @auther: zy</span><br><span class="line">     * @date: 2019/9/1 15:07</span><br><span class="line">     */</span><br><span class="line">    List&lt;User&gt; getAllUsers();</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@Service</span><br><span class="line">public class UserServiceImpl implements UserService &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public User saveUser(User user) &#123;</span><br><span class="line">        return userRepository.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void removeUser(Long id) &#123;</span><br><span class="line">        userRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public User updateUser(User user) &#123;</span><br><span class="line">        return userRepository.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public User getUserByNameAndPassword(String userName, String passWord) &#123;</span><br><span class="line">        return userRepository.findByUserNameAndPassWord(userName,passWord);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;User&gt; getAllUsers() &#123;</span><br><span class="line">        return userRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制层-Controller"><a href="#控制层-Controller" class="headerlink" title="控制层(Controller)"></a>控制层(Controller)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class HelloController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/users&quot;)</span><br><span class="line">    public User getUser()&#123;</span><br><span class="line">        // 获取当前时间</span><br><span class="line">        Date date = new Date();</span><br><span class="line"></span><br><span class="line">        DateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line"></span><br><span class="line">        String time = dateFormat.format(date);</span><br><span class="line"></span><br><span class="line">        User user = new User(1L,&quot;zzy001&quot;,&quot;f695112338&quot;,&quot;zyf695112338@qq.com&quot;,&quot;金毛玲&quot;,time);</span><br><span class="line"></span><br><span class="line">        userService.saveUser(user);</span><br><span class="line"></span><br><span class="line">        return user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Demo结果"><a href="#Demo结果" class="headerlink" title="Demo结果"></a>Demo结果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="C:\Users\zyvictor\Desktop\截图\Springboot-hello-demo.jpg" alt="demo" title>                </div>                <div class="image-caption">demo</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/study/java/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="JPA" scheme="http://yoursite.com/tags/JPA/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis--jdbcType报错</title>
    <link href="http://yoursite.com/2019/08/12/BuilderException-%20Error%20resolving%20JdbcType/"/>
    <id>http://yoursite.com/2019/08/12/BuilderException- Error resolving JdbcType/</id>
    <published>2019-08-12T08:14:25.000Z</published>
    <updated>2019-08-12T08:14:53.294Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>启动tomcat的时候报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">` Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving JdbcType. Cause: java.lang.IllegalArgumentException: No enum constant org.apache.ibatis.type.JdbcType.DATATIME</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)</span><br><span class="line">at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)</span><br><span class="line">... 84 more</span><br><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: Error resolving JdbcType. Cause: java.lang.IllegalArgumentException: No enum constant org.apache.ibatis.type.JdbcType.DATATIME</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveJdbcType(BaseBuilder.java:73)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(XMLMapperBuilder.java:382)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:280)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)</span><br><span class="line">... 86 more</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: No enum constant org.apache.ibatis.type.JdbcType.DATATIME</span><br><span class="line">at java.lang.Enum.valueOf(Enum.java:238)</span><br><span class="line">at org.apache.ibatis.type.JdbcType.valueOf(JdbcType.java:25)</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveJdbcType(BaseBuilder.java:71)</span><br><span class="line">... 91 more</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>看报错的原因,是因为我在resultmap中jdbcType写了datatime,而在mybatis中是这个数据类型的</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>修改resultmap中的jdbcType即可</p><h2 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h2><p>我去网上查看了源码,发现mybatis的jdbcType是一个枚举类,有以下类型:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">public enum JdbcType &#123;</span><br><span class="line">    ARRAY(2003),</span><br><span class="line">    BIT(-7),</span><br><span class="line">    TINYINT(-6),</span><br><span class="line">    SMALLINT(5),</span><br><span class="line">    INTEGER(4),</span><br><span class="line">    BIGINT(-5),</span><br><span class="line">    FLOAT(6),</span><br><span class="line">    REAL(7),</span><br><span class="line">    DOUBLE(8),</span><br><span class="line">    NUMERIC(2),</span><br><span class="line">    DECIMAL(3),</span><br><span class="line">    CHAR(1),</span><br><span class="line">    VARCHAR(12),</span><br><span class="line">    LONGVARCHAR(-1),</span><br><span class="line">    DATE(91),</span><br><span class="line">    TIME(92),</span><br><span class="line">    TIMESTAMP(93),</span><br><span class="line">    BINARY(-2),</span><br><span class="line">    VARBINARY(-3),</span><br><span class="line">    LONGVARBINARY(-4),</span><br><span class="line">    NULL(0),</span><br><span class="line">    OTHER(1111),</span><br><span class="line">    BLOB(2004),</span><br><span class="line">    CLOB(2005),</span><br><span class="line">    BOOLEAN(16),</span><br><span class="line">    CURSOR(-10),</span><br><span class="line">    UNDEFINED(-2147482648),</span><br><span class="line">    NVARCHAR(-9),</span><br><span class="line">    NCHAR(-15),</span><br><span class="line">    NCLOB(2011),</span><br><span class="line">    STRUCT(2002),</span><br><span class="line">    JAVA_OBJECT(2000),</span><br><span class="line">    DISTINCT(2001),</span><br><span class="line">    REF(2006),</span><br><span class="line">    DATALINK(70),</span><br><span class="line">    ROWID(-8),</span><br><span class="line">    LONGNVARCHAR(-16),</span><br><span class="line">    SQLXML(2009),</span><br><span class="line">    DATETIMEOFFSET(-155);</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>希望以后自己能越过这个坎,多长记性.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/study/java/"/>
    
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>idea--target不同步问题</title>
    <link href="http://yoursite.com/2019/08/09/%E5%85%B3%E4%BA%8Eidea%E4%B8%ADtarget%E4%B8%8D%E5%90%8C%E6%AD%A5%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/08/09/关于idea中target不同步的问题/</id>
    <published>2019-08-09T11:15:25.000Z</published>
    <updated>2019-08-12T08:15:57.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h3><p>ssm小项目中,加入了新的css文件和js文件,然后重启项目,发现并没有效果.然鹅在页面中也及时的引用了相关的css和js文件.</p><h3 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h3><p>我使用的idea编译器,发现target文件中并没有相关的css和js文件,导致我在页面中引入了等同于没有引用,所以导致页面没有相关的效果.</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>先清理项目中的target目录,然后再rebuild项目即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//清理target目录</span><br><span class="line">mvn clean package</span><br></pre></td></tr></table></figure><p>然后rebuild项目(<code>快捷键Ctrl+Shift+F9</code>)</p><p>解决问题ok拉!!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="idea" scheme="http://yoursite.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记:Mybatis-PageHelper</title>
    <link href="http://yoursite.com/2019/07/17/Mybatis%E4%B9%8BPagehelper/"/>
    <id>http://yoursite.com/2019/07/17/Mybatis之Pagehelper/</id>
    <published>2019-07-17T12:04:14.000Z</published>
    <updated>2019-07-17T15:01:53.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3 id="Mybatis为我们提供了非常优秀的分页插件PageHelper该插件支持任何复杂的单表或者是多表-PageHelper实现了通用的分页查询-支持的数据有mysql-Oracle-DB2-PostgreSQL等"><a href="#Mybatis为我们提供了非常优秀的分页插件PageHelper该插件支持任何复杂的单表或者是多表-PageHelper实现了通用的分页查询-支持的数据有mysql-Oracle-DB2-PostgreSQL等" class="headerlink" title="Mybatis为我们提供了非常优秀的分页插件PageHelper该插件支持任何复杂的单表或者是多表. PageHelper实现了通用的分页查询,支持的数据有mysql,Oracle,DB2,PostgreSQL等"></a>Mybatis为我们提供了非常优秀的分页插件PageHelper该插件支持任何复杂的单表或者是多表. PageHelper实现了通用的分页查询,支持的数据有mysql,Oracle,DB2,PostgreSQL等</h3><h3 id="该插件托管于github-https-github-com-pagehelper-Mybatis-PageHelper"><a href="#该插件托管于github-https-github-com-pagehelper-Mybatis-PageHelper" class="headerlink" title="该插件托管于github: https://github.com/pagehelper/Mybatis-PageHelper"></a>该插件托管于github: <a href="https://github.com/pagehelper/Mybatis-PageHelper" target="_blank" rel="noopener">https://github.com/pagehelper/Mybatis-PageHelper</a></h3><h1 id="如何使用PageHelper"><a href="#如何使用PageHelper" class="headerlink" title="如何使用PageHelper"></a>如何使用PageHelper</h1><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><h4 id="使用maven导入"><a href="#使用maven导入" class="headerlink" title="- 使用maven导入"></a>- 使用maven导入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.4.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.jsqlparser&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jsqlparser&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.9.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h4><pre><code>1). 你可以从下面的地址中下载最新版本的 jar 包https://oss.sonatype.org/content/repositories/releases/com/github/pagehelper/pagehelper/http://repo1.maven.org/maven2/com/github/pagehelper/pagehelper/2). 由于使用了sql 解析工具，你还需要下载 jsqlparser.jar：http://repo1.maven.org/maven2/com/github/jsqlparser/jsqlparser/0.9.5/</code></pre><h3 id="配置拦截器插件"><a href="#配置拦截器插件" class="headerlink" title="配置拦截器插件"></a>配置拦截器插件</h3><p>特别注意，新版拦截器是 <strong>com.github.pagehelper.PageInterceptor</strong></p><p><strong>com.github.pagehelper.PageHelper</strong> 现在是一个特殊的 dialect 实现类，是分页插件的默认实现类，提供了和以前相同的用法。</p><h4 id="在Mybatis配置xml中配置拦截器插件"><a href="#在Mybatis配置xml中配置拦截器插件" class="headerlink" title="在Mybatis配置xml中配置拦截器插件"></a>在Mybatis配置xml中配置拦截器插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">        &lt;plugin interceptor=&quot;com.github.pagehelper.PageInterceptor&quot;&gt;</span><br><span class="line">            &lt;!--分页参数合理化  --&gt;</span><br><span class="line">            &lt;property name=&quot;reasonable&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br></pre></td></tr></table></figure><h4 id="在Spring配置文件中配置拦截器插件"><a href="#在Spring配置文件中配置拦截器插件" class="headerlink" title="在Spring配置文件中配置拦截器插件"></a>在Spring配置文件中配置拦截器插件</h4><p>使用 spring 的属性配置方式，可以使用 <strong>plugins</strong> 属性像下面这样配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">  &lt;!-- 注意其他配置 --&gt;</span><br><span class="line">  &lt;property name=&quot;plugins&quot;&gt;</span><br><span class="line">    &lt;array&gt;</span><br><span class="line">      &lt;bean class=&quot;com.github.pagehelper.PageInterceptor&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;properties&quot;&gt;</span><br><span class="line">          &lt;!--使用下面的方式配置参数，一行配置一个 --&gt;</span><br><span class="line">          &lt;value&gt;</span><br><span class="line">            params=value1</span><br><span class="line">          &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">      &lt;/bean&gt;</span><br><span class="line">    &lt;/array&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>确确实实去配置文件会让人显得很郁闷也很头疼.</p><p>所以我一般参照官方文档去配置,里面不仅有分页插件的参数介绍还有常用的配置参数,不同的场景需要配置不同的参数.</p><p><a href="https://pagehelper.github.io/docs/howtouse/" target="_blank" rel="noopener">参考PageHelper官方文档</a></p><h3 id="DAO层"><a href="#DAO层" class="headerlink" title="DAO层"></a>DAO层</h3><p>在我做的demo中,我是获取所有部门然后在使用分页插件进行物理分页.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public interface DepartmentMapper &#123;</span><br><span class="line"> //获取所有部门</span><br><span class="line">    List&lt;Department&gt; getAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public interface DepartmentService &#123;</span><br><span class="line">//查询所有</span><br><span class="line">    List&lt;Department&gt; getAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现相应的接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Service</span><br><span class="line">public class DepartmentServiceImpl implements DepartmentService &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    DepartmentMapper departmentMapper;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;Department&gt; getAll() &#123;</span><br><span class="line">        return departmentMapper.getAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h3><p>在控制器中,是跳转到部门的页面的时候将数据查询到然后使用PageHelper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @project : HRM</span><br><span class="line"> * @description : 控制器-首页管理</span><br><span class="line"> * @author : zy</span><br><span class="line"> */</span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(&quot;main&quot;)</span><br><span class="line">public class MainController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    UserService userService;</span><br><span class="line">    @Autowired</span><br><span class="line">    DepartmentService departmentService;</span><br><span class="line">    @Autowired</span><br><span class="line">    EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">     /**</span><br><span class="line">     * @decription 查询所有部门信息并跳转到部门信息页面(分页查询)</span><br><span class="line">     * @param model</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @RequestMapping(&quot;toDepartmentList.html&quot;)</span><br><span class="line">    public String toDepartmentList(@RequestParam(value = &quot;pn&quot;, defaultValue = &quot;1&quot;) Integer pn, Model model)&#123;</span><br><span class="line">        //pn为当前页码,每页的大小为5</span><br><span class="line">        PageHelper.startPage(pn,5);</span><br><span class="line">        List&lt;Department&gt; departmentList = departmentService.getAll();</span><br><span class="line">        //导航栏最多为5页</span><br><span class="line">        PageInfo pageInfo = new PageInfo(departmentList,5);</span><br><span class="line">        model.addAttribute(&quot;pageInfo&quot;,pageInfo);</span><br><span class="line">        return &quot;Dep/DepartmentList&quot;;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用PageHelper的静态方法-PageHelper-startPage-currentPage-PageSize"><a href="#使用PageHelper的静态方法-PageHelper-startPage-currentPage-PageSize" class="headerlink" title="使用PageHelper的静态方法:PageHelper.startPage(currentPage,PageSize)"></a>使用PageHelper的静态方法:PageHelper.startPage(currentPage,PageSize)</h4><p>(<strong>currentPage</strong>是指的当前页数<br><strong>PageSize</strong>是指的是每页的大小)</p><h4 id="使用PageInfo对象"><a href="#使用PageInfo对象" class="headerlink" title="使用PageInfo对象"></a>使用PageInfo对象</h4><p>在使用PageHelper.start后,我们可以使用PageInfo进行封装,可以从PageInfo中获得更多的信息,比如:当前页码,最后页码等等(详情<strong>5.3</strong>)</p><p>这里使用进行了分页封装,departmentList实际上是一个代理对象.<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PageInfo pageInfo = new PageInfo(departmentList,5);</span><br></pre></td></tr></table></figure></p><h4 id="PageInfo的属性参数-成员变量"><a href="#PageInfo的属性参数-成员变量" class="headerlink" title="PageInfo的属性参数,成员变量"></a>PageInfo的属性参数,成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//当前页</span><br><span class="line">private int pageNum;</span><br><span class="line"> </span><br><span class="line">//每页的数量</span><br><span class="line">private int pageSize;</span><br><span class="line"> </span><br><span class="line">//当前页的数量</span><br><span class="line">private int size;</span><br><span class="line"></span><br><span class="line">//总记录数</span><br><span class="line">private long total;</span><br><span class="line"> </span><br><span class="line">//总页数</span><br><span class="line">private int pages;</span><br><span class="line"> </span><br><span class="line">//结果集(每页显示的数据)</span><br><span class="line">private List&lt;T&gt; list;</span><br><span class="line"> </span><br><span class="line">//第一页</span><br><span class="line">private int firstPage;</span><br><span class="line"> </span><br><span class="line">//前一页</span><br><span class="line">private int prePage;</span><br><span class="line"> </span><br><span class="line">//是否为第一页</span><br><span class="line">private boolean isFirstPage = false;</span><br><span class="line"> </span><br><span class="line">//是否为最后一页</span><br><span class="line">private boolean isLastPage = false;</span><br><span class="line"> </span><br><span class="line">//是否有前一页</span><br><span class="line">private boolean hasPreviousPage = false;</span><br><span class="line"> </span><br><span class="line">//是否有下一页</span><br><span class="line">private boolean hasNextPage = false;</span><br><span class="line"> </span><br><span class="line">//导航页码数</span><br><span class="line">private int navigatePages;</span><br><span class="line"> </span><br><span class="line">//所有导航页号</span><br><span class="line">private int[] navigatepageNums;</span><br></pre></td></tr></table></figure><h3 id="View层-JSP"><a href="#View层-JSP" class="headerlink" title="View层(JSP)"></a>View层(JSP)</h3><p>这里使用了<figure class="highlight plain"><figcaption><span>test</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">&lt;div class=&quot;&quot; style=&quot;position: fixed;left: 500px;top: 490px;&quot;&gt;</span><br><span class="line">              当前 $&#123;pageInfo.pageNum&#125; 页,总 $&#123;pageInfo.pages&#125; 页,总 $&#123;pageInfo.total&#125; 条记录</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;&quot; style=&quot;position: fixed;right: 500px;top: 460px;&quot;&gt;</span><br><span class="line">              &lt;nav aria-label=&quot;Page navigation&quot;&gt;</span><br><span class="line">                  &lt;ul class=&quot;pagination&quot;&gt;</span><br><span class="line">                      &lt;li&gt;&lt;a href=&quot;/main/toDepartmentList.html?pn=1&quot;&gt;首页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                      &lt;c:if test=&quot;$&#123;pageInfo.hasPreviousPage&#125;&quot;&gt;</span><br><span class="line">                      &lt;li&gt;</span><br><span class="line">                          &lt;a href=&quot;/main/toDepartmentList.html?pn=$&#123;pageInfo.pageNum-1&#125;&quot; aria-label=&quot;Previous&quot;&gt;</span><br><span class="line">                              &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;</span><br><span class="line">                          &lt;/a&gt;</span><br><span class="line">                      &lt;/li&gt;</span><br><span class="line">                      &lt;/c:if&gt;</span><br><span class="line">                      &lt;c:forEach items=&quot;$&#123;pageInfo.navigatepageNums&#125;&quot; var=&quot;pagenum&quot;&gt;</span><br><span class="line">                            &lt;c:if test=&quot;$&#123;pagenum == pageInfo.pageNum&#125;&quot;&gt;</span><br><span class="line">                                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;/main/toDepartmentList.html?pn=$&#123;pagenum&#125;&quot;&gt;$&#123;pagenum&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                            &lt;/c:if&gt;</span><br><span class="line">                            &lt;c:if test=&quot;$&#123;pagenum != pageInfo.pageNum&#125;&quot;&gt;</span><br><span class="line">                                &lt;li&gt;&lt;a href=&quot;/main/toDepartmentList.html?pn=$&#123;pagenum&#125;&quot;&gt;$&#123;pagenum&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                            &lt;/c:if&gt;</span><br><span class="line">                      &lt;/c:forEach&gt;</span><br><span class="line">                      &lt;c:if test=&quot;$&#123;pageInfo.hasNextPage&#125;&quot;&gt;</span><br><span class="line">                          &lt;li&gt;</span><br><span class="line">                              &lt;a href=&quot;/main/toDepartmentList.html?pn=$&#123;pageInfo.pageNum+1&#125;&quot; aria-label=&quot;Next&quot;&gt;</span><br><span class="line">                                  &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;</span><br><span class="line">                              &lt;/a&gt;</span><br><span class="line">                          &lt;/li&gt;</span><br><span class="line">                          &lt;li&gt;&lt;a href=&quot;/main/toDepartmentList.html?pn=$&#123;pageInfo.pages&#125;&quot;&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                      &lt;/c:if&gt;</span><br><span class="line">                  &lt;/ul&gt;</span><br><span class="line">              &lt;/nav&gt;</span><br><span class="line">          &lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h1 id="demo截图"><a href="#demo截图" class="headerlink" title="demo截图"></a>demo截图</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/07/17/ZOuKRP.jpg" alt="ZOuKRP.jpg" title>                </div>                <div class="image-caption">ZOuKRP.jpg</div>            </figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>第一次写笔记,感觉自己还是做的很不够,思路不够清晰,写的不太好也写的太慢…</p><p>希望自己能够在以后写的越来越好.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2019/07/17/ZOM3Nj.jpg" alt="可爱的猫猫" title>                </div>                <div class="image-caption">可爱的猫猫</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/study/java/"/>
    
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客备份</title>
    <link href="http://yoursite.com/2019/07/17/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD/"/>
    <id>http://yoursite.com/2019/07/17/Hexo博客备份/</id>
    <published>2019-07-17T03:49:15.000Z</published>
    <updated>2019-08-04T12:45:10.217Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于hexo博客备份"><a href="#关于hexo博客备份" class="headerlink" title="关于hexo博客备份"></a>关于hexo博客备份</h2><p>使用 Hexo 在 GitHub Pages 搭建博客时，博客作为一个单独的 GitHub 仓库存在，但是这个仓库只有生成的静态网页文件，并没有 Hexo 的源文件。这样一来换电脑或者重装系统后，再想找回源文件就比较麻烦了，这里推荐一种比较完美的方法解决备份问题。</p><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><ol><li>创建仓库 WincerChan.github.io，如果同名仓库之前已经创建，请将之前的仓库改名新建的仓库必须是 Username.github.io（如果你是将 Hexo 博客部署到了自己的服务器，那么仓库名可以随意设置，我这里就是随意设置的仓库）</li><li>创建两个分支：master 和 hexo；</li><li>设置 hexo 为默认分支</li><li>将刚刚创建的新仓库 clone 至本地，将之前的 hexo 文件夹中的 _config.yml、themes/、source/、scaffolds/、package.json 和 .gitignore 复制至 WincerChan.github.io 文件夹</li><li>将 themes/next/（我用的是 NexT 主题）中的 .git/ 删除，否则无法将主题文件夹 push（也可以将主题文件夹使用子模块的方式添加到该仓库)</li><li>在 WincerChan.github.io 文件夹执行 npm install 和 npm install hexo-deployer-git（这里可以看一看分支是不是显示为 hexo）</li><li>执行 git add、git commit -m “”、git push origin hexo 来提交 hexo 网站源文件；</li><li>执行 hexo g -d 生成静态网页部署至 Github 上</li></ol><h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><ol><li>依次执行 git add、git commit -m “” 和 git push origin hexo 来提交 hexo 网站源文件</li><li>执行 hexo g -d 生成静态网页部署至 Github 上</li></ol><h1 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h1><ol><li>安装 git</li><li>安装Nodejs和npm</li><li>使用 git clone git#github.com:WincerChan/WincerChan.github.io.git 将仓库拷贝至本地</li><li>在文件夹内执行以下命令 npm install hexo-cli -g、npm install、npm install hexo-deployer-git</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git basic command</title>
    <link href="http://yoursite.com/2019/07/17/git-basic-command/"/>
    <id>http://yoursite.com/2019/07/17/git-basic-command/</id>
    <published>2019-07-17T02:59:21.000Z</published>
    <updated>2019-07-18T03:08:59.552Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>###Git 基本命令</p><hr><h4 id="git-init-命令把这个目录变成Git可以管理的仓库"><a href="#git-init-命令把这个目录变成Git可以管理的仓库" class="headerlink" title="git init (命令把这个目录变成Git可以管理的仓库)"></a><strong>git init</strong> (命令把这个目录变成Git可以管理的仓库)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in /Users/michael/learngit/.git/</span><br></pre></td></tr></table></figure><h4 id="git-add-将文件添加到仓库"><a href="#git-add-将文件添加到仓库" class="headerlink" title="git add (将文件添加到仓库)"></a><strong>git add</strong> (将文件添加到仓库)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add readme.txt</span><br></pre></td></tr></table></figure><h4 id="git-commit-将文件提交到仓库"><a href="#git-commit-将文件提交到仓库" class="headerlink" title="git commit (将文件提交到仓库)"></a><strong>git commit</strong> (将文件提交到仓库)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;wrote a readme file&quot;</span><br><span class="line">[master (root-commit) eaadf4e] wrote a readme file</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 readme.txt</span><br></pre></td></tr></table></figure><p>(这里git commit -m “这里是添加本次提交的说明”<br>git add 是可以添加多个文件,而git commit是可以一次提交多个的)</p><h4 id="git-status-查看当前仓库的状态"><a href="#git-status-查看当前仓库的状态" class="headerlink" title="git status (查看当前仓库的状态)"></a><strong>git status</strong> (查看当前仓库的状态)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure><p>(这里表示readme.txt是已经修改了,但是还没有提交修改)</p><h4 id="git-diff-查看不同-difference"><a href="#git-diff-查看不同-difference" class="headerlink" title="git diff (查看不同(difference))"></a><strong>git diff</strong> (查看不同(difference))</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git diff readme.txt </span><br><span class="line">diff --git a/readme.txt b/readme.txt</span><br><span class="line">index 46d49bf..9247db6 100644</span><br><span class="line">--- a/readme.txt</span><br><span class="line">+++ b/readme.txt</span><br><span class="line">@@ -1,2 +1,2 @@</span><br><span class="line">-Git is a version control system.</span><br><span class="line">+Git is a distributed version control system.</span><br><span class="line"> Git is free software.</span><br></pre></td></tr></table></figure><h4 id="git-log-命令显示从最近到最远的提交日志"><a href="#git-log-命令显示从最近到最远的提交日志" class="headerlink" title="git log (命令显示从最近到最远的提交日志)"></a><strong>git log</strong> (命令显示从最近到最远的提交日志)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit 1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -&gt; master)</span><br><span class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</span><br><span class="line">Date:   Fri May 18 21:06:15 2018 +0800</span><br><span class="line"></span><br><span class="line">    append GPL</span><br><span class="line"></span><br><span class="line">commit e475afc93c209a690c39c13a46716e8fa000c366</span><br><span class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</span><br><span class="line">Date:   Fri May 18 21:03:36 2018 +0800</span><br><span class="line"></span><br><span class="line">    add distributed</span><br><span class="line"></span><br><span class="line">commit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0</span><br><span class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</span><br><span class="line">Date:   Fri May 18 20:59:18 2018 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br></pre></td></tr></table></figure><p>(如果嫌输出信息太多，看得眼花缭乱的，可以试试加上–pretty=oneline参数：)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git log --pretty=oneline</span><br><span class="line">1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -&gt; master) append GPL</span><br><span class="line">e475afc93c209a690c39c13a46716e8fa000c366 add distributed</span><br><span class="line">eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 wrote a readme file</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/25/hello-world/"/>
    <id>http://yoursite.com/2019/06/25/hello-world/</id>
    <published>2019-06-25T03:36:04.338Z</published>
    <updated>2019-07-17T02:55:04.711Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
</feed>
